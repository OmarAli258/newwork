// Sys.vm

// Sys.init: Test function for Sys.min, Sys.max, and Sys.range
function Sys.init 0
    return

// Sys.min: Computes the minimum of two values on the stack
// Arguments: arg1, arg2 (top of stack)
function Sys.min 0
    pop temp 0  // Pop the second value (arg2)
    pop temp 1  // Pop the first value (arg1)
    push temp 1 // Push arg1
    push temp 0 // Push arg2
    lt          // Compare arg1 < arg2
    if-goto LESSER
    push temp 0 // Push arg2 (arg2 is smaller)
    return
label LESSER
    push temp 1 // Push arg1 (arg1 is smaller)
    return

// Sys.max: Computes the maximum of two values on the stack
// Arguments: arg1, arg2 (top of stack)
function Sys.max 0
    pop temp 0  // Pop the second value (arg2)
    pop temp 1  // Pop the first value (arg1)
    push temp 1 // Push arg1
    push temp 0 // Push arg2
    gt          // Compare arg1 > arg2
    if-goto GREATER
    push temp 0 // Push arg2 (arg2 is larger)
    return
label GREATER
    push temp 1 // Push arg1 (arg1 is larger)
    return

// Sys.range: Computes the range of an array
// Arguments: memory address of the first element (arg1), number of elements (arg2)
function Sys.range 2
    // Check if n <= 1
    push argument 1
    push constant 1
    lt
    if-goto RETURN_ZERO

    // Initialize min and max with the first element
    push argument 0
    pop pointer 1
    push that 0
    pop local 0  // local 0 = min = array[0]
    push that 0
    pop local 1  // local 1 = max = array[0]

    // Loop through the array to find min and max
    push constant 1
    pop temp 0  // temp 0 = i = 1
label LOOP
    push temp 0
    push argument 1
    eq
    if-goto END_LOOP

    // Load array[i]
    push argument 0
    push temp 0
    add
    pop pointer 1
    push that 0

    // Update min
    push local 0
    call Sys.min 2
    pop local 0

    // Update max
    push local 1
    call Sys.max 2
    pop local 1

    // Increment i
    push temp 0
    push constant 1
    add
    pop temp 0
    goto LOOP

label END_LOOP
    // Compute range = max - min
    push local 1
    push local 0
    sub
    return

label RETURN_ZERO
    push constant 0
    return